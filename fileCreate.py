"""
mmd 恋活卡片文件夹创建
"", "","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""
"""

import os

file_dict = {
    "崩三": ["布洛妮娅", "琪亚娜", "芽衣", "德丽莎", "八重樱", "卡莲", "丽塔", "幽兰黛尔", "姬子", "浮华",
             "萝莎莉娅-莉莉娅", "希儿", "爱莉希雅", "梅比乌斯", "帕朵菲莉丝", "阿波尼亚", "伊甸", "格蕾修",
             "维尔薇", "娜塔莎", "李素裳", "苏莎娜", "爱衣", "米丝忒琳", "时雨绮罗", "西琳", "希娜狄雅",
             "科拉莉", "赫丽娅", "瑟莉姆", "莎芙莱", "松雀", "薇塔", "瑟拉珮姆", "月下", "梅"],
    "原神": ["凝光", "诺艾尔", "芭芭拉", "安柏", "丽莎", "菲谢尔", "北斗", "砂糖", "烟绯", "云堇", "久岐忍", "柯莱",
             "莱依拉", "珐露珊", "琳妮特", "夏洛蒂", "荧", "莫娜", "刻晴", "琴", "甘雨", "胡桃", "优菈", "神里绫华",
             "宵宫", "雷电将军", "珊瑚宫心海", "申鹤", "八重神子", "夜兰", "妮露", "纳西妲", "芙宁娜", "娜维娅", "闲云",
             "千织", "阿蕾奇诺", "克洛琳德", "希格雯", "艾梅莉埃", "玛拉妮", "希诺宁", "恰斯卡", "蓝砚", "玛薇卡", "茜特菈莉",
             "梦见月瑞希", "瓦雷莎", "爱可菲", "丝柯克", "菈乌玛", "爱诺", "桑多涅", "哥伦比娅"],
    "鸣潮": ["桃祈", "丹瑾", "散华", "白芷", "釉瑚", "秧秧", "漂泊者", "维里奈", "安可", "吟霖", "今汐", "长离", "折枝",
             "守岸人", "灯灯", "菲比", "柯莱塔", "椿", "洛可可", "赞妮", "鉴心", "坎特蕾拉", "夏空", "露帕", "卡提希娅",
          "露帕", "弗洛洛", "奥古斯塔", "尤诺"],
    "铁道": ["停云", "青雀", "黑塔", "素裳", "娜塔莎", "希露瓦", "佩拉", "三月七", "艾丝妲", "星", "姬子", "克拉拉",
             "布洛妮娅", "希儿", "银狼", "驭空", "卡芙卡", "符玄", "镜流", "桂乃芬", "托帕", "藿藿", "寒鸦", "雪衣",
             "阮梅", "黑天鹅", "花火", "黄泉", "知更鸟", "流萤", "翡翠", "云璃", "飞霄", "灵砂", "乱破", "阿格莱雅", "缇宝",
             "遐蝶", "风堇", "赛飞儿", "saber", "海瑟音", "刻律德菈"],
    "绝区零": ["露西", "安比", "妮可", "可琳", "格莉丝", "艾莲", "丽娜", "朱鸢", "青衣", "简", "凯撒", "柏妮思",
               "月城柳", "星见雅", "铃", "耀嘉音", "伊芙琳", "薇薇安", "仪玄", "红豆", "浮波柚叶", "橘福福", "爱丽丝", "伊德海莉",
               "卢西娅", "奥菲丝", "席德", "启明星"],
    "碧蓝航线": ["光辉", "天狼星", "恶毒"]
}


def generate_file():
    base_path = os.path.join(os.getcwd(), "mmd")
    print(base_path)
    for e in file_dict:
        temp = os.path.join(base_path, e)
        print(temp)
        if not os.path.exists(temp):
            os.makedirs(temp)
            for i in file_dict.get(e):
                if not os.path.exists(os.path.join(temp, i)):
                    os.mkdir(os.path.join(temp, i))
        else:
            for i in file_dict.get(e):
                if not os.path.exists(os.path.join(temp, i)):
                    os.mkdir(os.path.join(temp, i))


if __name__ == '__main__':
    generate_file()
